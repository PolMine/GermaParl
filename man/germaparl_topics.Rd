% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/lda.R
\name{germaparl_download_lda}
\alias{germaparl_download_lda}
\alias{topics}
\alias{germaparl_encode_lda_topics}
\alias{germaparl_load_topicmodel}
\alias{germaparl_get_speeches_for_topic}
\title{Use topicmodels prepared for GermaParl.}
\usage{
germaparl_download_lda(
  k = c(100L, 150L, 175L, 200L, 225L, 250L, 275L, 300L, 350L, 400L, 450L, 500L),
  rds_file = sprintf("germaparl_lda_speeches_\%d.rds", k),
  webdir = "https://s3.eu-central-1.amazonaws.com/polmine/corpora/cwb/germaparl"
)

germaparl_encode_lda_topics(k = 200, n = 5)

germaparl_load_topicmodel(k, verbose = TRUE)

germaparl_get_speeches_for_topic(n)
}
\arguments{
\item{k}{The number of topics of the topicmodel.}

\item{rds_file}{filename of the RData file}

\item{webdir}{The web location.}

\item{n}{Number of topics to write to corpus}

\item{verbose}{logical}
}
\description{
A set of LDA topicmodels is deposited at a Amazon S3 webspace, for a number of topics between
100 and 500.
}
\details{
The function \code{germaparl_download_lda} to download the
  *.rds-file. It will be stored in the \code{extdata/topicmodels/}
  subdirectory of the installed GermaParl package.

\code{germaparl_encode_lda_topics} will add a new s-attributes
  'topics' to GermaParl corpus with topicmodel for \code{k} topics. The
  \code{n} topics for speeches will be written to the corpus. A requirement
  for the function to work is that the s-attribute 'speech' has been
  generated beforehand using \code{germaparl_add_s_attribute_speech}.

\code{germaparl_load_topicmodel} will load a topicmodel into memory.
  The function will return a \code{LDA_Gibbs} topicmodel, if the topicmodel
  for \code{k} is present; \code{NULL} if the topicmodel has not yet been
  downloaded.

@code{germaparl_get_speeches_for_topic} will get a bundle with
  Speeches for Topic.
}
\examples{
topicmodel_dir <- system.file(package = "GermaParl", "extdata", "topicmodels")
lda_files <- Sys.glob(paths = sprintf("\%s/germaparl_lda_speeches_*.rds", topicmodel_dir))
if (length(lda_files) > 0  && requireNamespace("topicmodels")){
  lda <- readRDS(lda_files[1])
  lda_terms <- terms(lda, 50)
}
\dontrun{
germaparl_encode_lda_topics(k = 250, n = 3)
}
\dontrun{
k <- 250
model <- germaparl_load_topicmodel(k = k)
T <- topicmodels::terms(model, k)
topic <- 181 # topic nuclear energy
topic <- 133 # foreigners law
topic <- 65 # right-wing extremism

PB <- germaparl_get_speeches_for_topic(topic)
for (i in 1L:length(PB)) {
  fulltext <- read(PB[[i]])
  fulltext <- highlight(fulltext, list(yellow = T[1:100,topic]))
  print(fulltext)
  if (readline() == "q") stop()
}
}
}
